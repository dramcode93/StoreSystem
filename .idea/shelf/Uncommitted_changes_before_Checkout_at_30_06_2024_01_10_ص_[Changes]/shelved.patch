Index: src/components/Dashboard/Dashboard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { BiCategory } from \"react-icons/bi\";\r\nimport { LiaMoneyBillSolid } from \"react-icons/lia\";\r\nimport { MdProductionQuantityLimits, MdBorderColor } from \"react-icons/md\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useI18nContext } from \"../context/i18n-context\";\r\nimport module from \"./Dashboard.module.css\";\r\nimport { House } from \"@phosphor-icons/react\";\r\nimport { FiChevronDown, FiChevronUp, FiShoppingCart } from \"react-icons/fi\";\r\nimport Cookies from \"js-cookie\";\r\nimport { BsFillPersonVcardFill } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FaHome,\r\n  FaStore,\r\n  FaSitemap,\r\n  FaChartBar,\r\n  FaReceipt,\r\n  FaUsers,\r\n  FaTag,\r\n  FaClipboardList,\r\n  FaShoppingBag,\r\n  FaUserCircle,\r\n  FaFileInvoice,\r\n  FaFileInvoiceDollar,\r\n  FaPercentage,\r\n  FaLock,\r\n  FaChartPie,\r\n  FaChartLine,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  MdCategory,\r\n  MdShoppingCart,\r\n  MdAccountCircle,\r\n  MdOutlineInventory,\r\n} from \"react-icons/md\";\r\nimport { HiOutlineDocumentReport, HiUserGroup } from \"react-icons/hi\";\r\nimport { IoMdPricetags } from \"react-icons/io\";\r\nconst roleRoutes = {\r\n  admin: [\r\n    { path: \"/Home\", name: \"Home.Home\", icon: <FaHome /> },\r\n    {\r\n      name: \"Home.shop\",\r\n      icon: <FaStore />,\r\n      dropdownItems: [\r\n        { text: \"Main Shop\", path: \"/shop\", icon: <FaStore /> },\r\n        {\r\n          text: \"Information\",\r\n          path: \"/shopInformation\",\r\n          icon: <HiOutlineDocumentReport />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Home.branches\",\r\n      icon: <FaSitemap />,\r\n      dropdownItems: [],\r\n    },\r\n    {\r\n      path: \"/SalesTable\",\r\n      name: \"Home.Sales\",\r\n      icon: <FaChartLine />,\r\n    },\r\n    {\r\n      path: \"/SubSalesTable\",\r\n      name: \"Home.subSales\",\r\n      icon: <FaChartPie />,\r\n    },\r\n    {\r\n      path: \"/FinancialTransactions\",\r\n      name: \"Home.FinancialTransactions\",\r\n      icon: <FaFileInvoiceDollar />,\r\n    },\r\n    { path: \"/category\", name: \"Home.Category\", icon: <MdCategory /> },\r\n    {\r\n      path: \"/products\",\r\n      name: \"Home.products\",\r\n      icon: <MdOutlineInventory />,\r\n    },\r\n    {\r\n      path: \"/customers\",\r\n      name: \"Home.Customer\",\r\n      icon: <FaUsers />,\r\n      // dropdownItems: [\r\n      //   { text: \"Create\", path: \"/create\", icon: <MdAccountCircle /> },\r\n      //   { text: \"Show bills\", path: \"/show-bills\", icon: <FaFileInvoice /> },\r\n      // ],\r\n    },\r\n    { path: \"/bills\", name: \"Home.Bill\", icon: <FaFileInvoice /> },\r\n    { path: \"/order\", name: \"Home.orders\", icon: <FaShoppingBag /> },\r\n    { path: \"/coupons\", name: \"Home.coupons\", icon: <IoMdPricetags /> },\r\n    {\r\n      name: \"Home.Profile\",\r\n      icon: <FaUserCircle />,\r\n      dropdownItems: [\r\n        { text: \"Information\", path: \"/information\", icon: <FaUserCircle /> },\r\n        { text: \"Change Password\", path: \"/change-password\", icon: <FaLock /> },\r\n        { text: \"Users\", path: \"/users\", icon: <HiUserGroup /> },\r\n      ],\r\n    },\r\n  ],\r\n  manager: [\r\n    // { path: \"/Home\", name: \"Home.Home\", icon: <FaHome /> },\r\n    { path: \"/shopTypes\", name: \"Home.shopTypes\", icon: <FaStore /> },\r\n    {\r\n      name: \"Home.Profile\",\r\n      icon: <FaUserCircle />,\r\n      dropdownItems: [\r\n        { text: \"Information\", path: \"/information\", icon: <FaUserCircle /> },\r\n        { text: \"Change Password\", path: \"/change-password\", icon: <FaLock /> },\r\n        { text: \"Users\", path: \"/users\", icon: <HiUserGroup /> },\r\n      ],\r\n    },\r\n  ],\r\n  user: [\r\n    { path: \"/Home\", name: \"Home.Home\", icon: <FaHome /> },\r\n    { path: \"/category\", name: \"Home.Category\", icon: <MdCategory /> },\r\n    {\r\n      path: \"/products\",\r\n      name: \"Home.products\",\r\n      icon: <MdOutlineInventory />,\r\n    },\r\n    { path: \"/bills\", name: \"Home.Bill\", icon: <FaFileInvoice /> },\r\n    { path: \"/order\", name: \"Home.orders\", icon: <FaShoppingBag /> },\r\n\r\n    {\r\n      path: \"/customers\",\r\n      name: \"Home.Customer\",\r\n      icon: <FaUsers />,\r\n    },\r\n    { path: \"/coupons\", name: \"Home.coupons\", icon: <IoMdPricetags /> },\r\n\r\n    {\r\n      name: \"Home.Profile\",\r\n      icon: <FaUserCircle />,\r\n      dropdownItems: [\r\n        { text: \"Information\", path: \"/information\", icon: <FaUserCircle /> },\r\n        { text: \"Change Password\", path: \"/change-password\", icon: <FaLock /> },\r\n      ],\r\n    },\r\n  ],\r\n  customer: [\r\n    { path: \"/Home\", name: \"Home.Home\", icon: <FaHome /> },\r\n    { path: \"/cart\", name: \"Home.Cart\", icon: <MdShoppingCart /> },\r\n    { path: \"/order\", name: \"Home.orders\", icon: <FaShoppingBag /> },\r\n    {\r\n      name: \"Home.Profile\",\r\n      icon: <FaUserCircle />,\r\n      dropdownItems: [\r\n        { text: \"Information\", path: \"/information\", icon: <FaUserCircle /> },\r\n        { text: \"Change Password\", path: \"/change-password\", icon: <FaLock /> },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Dashboard = ({ children }) => {\r\n  const token = Cookies.get(\"token\");\r\n  const { t, language } = useI18nContext();\r\n  const [role, setRole] = useState(\"\");\r\n  const [activeLink, setActiveLink] = useState(null);\r\n  const [isProfileActive, setIsProfileActive] = useState(false);\r\n  const [isShopActive, setIsShopActive] = useState(false);\r\n  const [isBranchesActive, setIsBranchesActive] = useState(false);\r\n  const [activeDropdownItem, setActiveDropdownItem] = useState(null);\r\n  const [activeBranch, setActiveBranch] = useState(null);\r\n  const [branches, setBranches] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(\r\n            \"https://store-system-api.gleeze.com/api/Users/getMe\",\r\n            { headers: { Authorization: `Bearer ${token} ` } }\r\n          );\r\n          setRole(response.data.data.role || \"Home.shop\");\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data:\", error);\r\n          if (\r\n            error.response &&\r\n            error.response.data.message === \"jwt malformed\"\r\n          ) {\r\n            Cookies.remove(\"token\");\r\n          }\r\n          setRole(\"Home.shop\");\r\n        }\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const storedActiveLinkIndex = localStorage.getItem(\"activeLinkIndex\");\r\n    const storedIsProfileActive = localStorage.getItem(\"isProfileActive\");\r\n    const storedIsShopActive = localStorage.getItem(\"isShopActive\");\r\n    const storedIsBranchesActive = localStorage.getItem(\"isBranchesActive\");\r\n    const storedActiveDropdownItem = localStorage.getItem(\"activeDropdownItem\");\r\n    const storedActiveBranch = localStorage.getItem(\"activeBranch\");\r\n\r\n    if (storedActiveLinkIndex !== null) {\r\n      setActiveLink(parseInt(storedActiveLinkIndex));\r\n    }\r\n\r\n    if (storedIsProfileActive !== null) {\r\n      setIsProfileActive(storedIsProfileActive === \"true\");\r\n    }\r\n\r\n    if (storedIsShopActive !== null) {\r\n      setIsShopActive(storedIsShopActive === \"true\");\r\n    }\r\n\r\n    if (storedIsBranchesActive !== null) {\r\n      setIsBranchesActive(storedIsBranchesActive === \"true\");\r\n    }\r\n\r\n    if (storedActiveDropdownItem !== null) {\r\n      setActiveDropdownItem(parseInt(storedActiveDropdownItem));\r\n    }\r\n\r\n    if (storedActiveBranch !== null) {\r\n      setActiveBranch(parseInt(storedActiveBranch));\r\n    }\r\n  }, []);\r\n\r\n  const handleLinkClick = useCallback(\r\n    (index, item) => {\r\n      setActiveLink(index);\r\n      if (item.name === \"Home.Profile\") {\r\n        setIsProfileActive(!isProfileActive);\r\n        localStorage.setItem(\"isProfileActive\", !isProfileActive);\r\n      } else if (item.name === \"Home.shop\") {\r\n        setIsShopActive(!isShopActive);\r\n        localStorage.setItem(\"isShopActive\", !isShopActive);\r\n      } else if (item.name === \"Home.branches\") {\r\n        setIsBranchesActive(!isBranchesActive);\r\n        localStorage.setItem(\"isBranchesActive\", !isBranchesActive);\r\n      } else {\r\n        setIsProfileActive(false);\r\n        setIsShopActive(false);\r\n        setIsBranchesActive(false);\r\n        localStorage.setItem(\"isProfileActive\", false);\r\n        localStorage.setItem(\"isShopActive\", false);\r\n        localStorage.setItem(\"isBranchesActive\", false);\r\n      }\r\n      localStorage.setItem(\"activeLinkIndex\", index);\r\n      setActiveDropdownItem(null);\r\n      setActiveBranch(null);\r\n    },\r\n    [isProfileActive, isShopActive, isBranchesActive]\r\n  );\r\n\r\n  const handleDropdownItemClick = useCallback((dropdownIndex) => {\r\n    setActiveDropdownItem(dropdownIndex);\r\n    localStorage.setItem(\"activeDropdownItem\", dropdownIndex);\r\n  }, []);\r\n\r\n  const handleBranchClick = useCallback(\r\n    (index) => {\r\n      setActiveBranch(index === activeBranch ? null : index);\r\n      localStorage.setItem(\r\n        \"activeBranch\",\r\n        index === activeBranch ? null : index\r\n      );\r\n    },\r\n    [activeBranch]\r\n  );\r\n\r\n  const routes = roleRoutes[role] || roleRoutes[\"Home.shop\"];\r\n  useEffect(() => {\r\n    const fetchBranches = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(\r\n            \"https://store-system-api.gleeze.com/api/subShops/list?sort=name&fields=name\",\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          const fetchedBranches = response.data.data;\r\n\r\n          const updatedRoutes = roleRoutes.admin.map((route) => {\r\n            if (route.name === \"Home.branches\") {\r\n              return {\r\n                ...route,\r\n                dropdownItems: fetchedBranches.map((branch, branchIndex) => ({\r\n                  text: branch.name,\r\n                  path: `/branch/${branch._id}/information`,\r\n                  icon: <FiShoppingCart />,\r\n                  dropdownItems: [\r\n                    {\r\n                      text: \"Financial Dealings\",\r\n                      path: `/branch/${branch._id}/financial`,\r\n                    },\r\n                    {\r\n                      text: \"Branch Information\",\r\n                      path: `/branch/${branch._id}/information`,\r\n                    },\r\n                  ],\r\n                })),\r\n              };\r\n            }\r\n            return route;\r\n          });\r\n\r\n          roleRoutes.admin = updatedRoutes;\r\n          setBranches(fetchedBranches);\r\n        } catch (error) {\r\n          console.error(\"Error fetching branches data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchBranches();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed top-0 dark:text-gray-100 z-40\"\r\n      dir={language === \"ar\" ? \"rtl\" : \"ltr\"}\r\n    >\r\n      {routes && (\r\n        <div\r\n          style={{\r\n            // width:isSideBarOpen?\"260px\":\"0px\",\r\n            marginTop: \"12.77vh\",\r\n            boxShadow:\r\n              language === \"ar\"\r\n                ? \"-4px 0px 2px rgba(0, 0, 0, 0.1)\"\r\n                : \"4.0px 8.0px 8.0px hsl(0deg 0% 0% / 0.08)\",\r\n          }}\r\n          className={`${module.sidebar}`}\r\n          dir={language === \"ar\" ? \"rtl\" : \"ltr\"}\r\n        >\r\n          {routes.map((item, index) => (\r\n            <div key={index}>\r\n              <NavLink\r\n                to={item.path}\r\n                className={module.link}\r\n                onClick={() => handleLinkClick(index, item)}\r\n                style={\r\n                  activeLink === index\r\n                    ? {\r\n                        backgroundColor: \"#006edc\",\r\n                        color: \"white\",\r\n                        borderRadius: \"0px\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <div className={module.icon}>{item.icon}</div>\r\n                <div className={`${module.link_text} flex`}>\r\n                  {t(item.name)}\r\n                  {\"   \"}\r\n                  {item.dropdownItems && (\r\n                    <>\r\n                      {activeLink === index &&\r\n                      ((item.name === \"Home.Profile\" && isProfileActive) ||\r\n                        (item.name === \"Home.shop\" && isShopActive) ||\r\n                        (item.name === \"Home.branches\" && isBranchesActive)) ? (\r\n                        <FiChevronUp className=\"mx-2 mt-1\"  />\r\n                      ) : (\r\n                        <FiChevronDown className=\"mx-2 mt-1\"  />\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </NavLink> \r\n              {activeLink === index &&\r\n                ((item.name === \"Home.Profile\" && isProfileActive) ||\r\n                  (item.name === \"Home.shop\" && isShopActive) ||\r\n                  (item.name === \"Home.branches\" && isBranchesActive)) &&\r\n                item.dropdownItems && (\r\n                  <div\r\n                    className=\"transition ease-in-out duration-75\"\r\n                    dir={language === \"ar\" ? \"rtl\" : \"ltr\"}\r\n                  >\r\n                    <div className=\"flex flex-col w-full mx-auto font-bold\">\r\n                      {item.dropdownItems.map((dropdownItem, dropdownIndex) => (\r\n                        <div key={dropdownIndex}>\r\n                          <NavLink\r\n                            to={dropdownItem.path}\r\n                            className={`${module.branch}`}\r\n                            onClick={() =>\r\n                              handleDropdownItemClick(dropdownIndex)\r\n                            }\r\n                            style={\r\n                              activeDropdownItem === dropdownIndex\r\n                                ? {\r\n                                    backgroundColor: \"transparent\",\r\n                                    borderRadius: \"0px\",\r\n                                  }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <div className=\"flex items-center hover:none\">\r\n                              <p className=\" m-2 w-32\">{dropdownItem.text}</p>\r\n                              {dropdownItem.dropdownItems && (\r\n                                <>\r\n                                  {activeBranch === dropdownIndex ? (\r\n                                    <FiChevronUp />\r\n                                  ) : (\r\n                                    <FiChevronDown />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </NavLink>\r\n                          {activeDropdownItem === dropdownIndex &&\r\n                            dropdownItem.dropdownItems && (\r\n                              <div className=\"ml-4\">\r\n                                {dropdownItem.dropdownItems.map(\r\n                                  (subItem, subIndex) => (\r\n                                    <NavLink\r\n                                      key={subIndex}\r\n                                      to={subItem.path}\r\n                                      className={module.subDropDown}\r\n                                      style={{\r\n                                        marginLeft: \"0\",\r\n                                        display: \"block\",\r\n                                      }}\r\n                                    >\r\n                                      {subItem.text}\r\n                                    </NavLink>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Dashboard/Dashboard.jsx b/src/components/Dashboard/Dashboard.jsx
--- a/src/components/Dashboard/Dashboard.jsx	
+++ b/src/components/Dashboard/Dashboard.jsx	
@@ -1,39 +1,27 @@
 import React, { useEffect, useState, useCallback } from "react";
-import { BiCategory } from "react-icons/bi";
-import { LiaMoneyBillSolid } from "react-icons/lia";
-import { MdProductionQuantityLimits, MdBorderColor } from "react-icons/md";
-import { CgProfile } from "react-icons/cg";
-import { NavLink } from "react-router-dom";
+    import { NavLink } from "react-router-dom";
 import { useI18nContext } from "../context/i18n-context";
 import module from "./Dashboard.module.css";
-import { House } from "@phosphor-icons/react";
-import { FiChevronDown, FiChevronUp, FiShoppingCart } from "react-icons/fi";
+ import { FiChevronDown, FiChevronUp, FiShoppingCart } from "react-icons/fi";
 import Cookies from "js-cookie";
-import { BsFillPersonVcardFill } from "react-icons/bs";
-import axios from "axios";
+ import axios from "axios";
 import {
   FaHome,
   FaStore,
   FaSitemap,
-  FaChartBar,
-  FaReceipt,
-  FaUsers,
-  FaTag,
-  FaClipboardList,
-  FaShoppingBag,
+   FaUsers,
+   FaShoppingBag,
   FaUserCircle,
   FaFileInvoice,
   FaFileInvoiceDollar,
-  FaPercentage,
-  FaLock,
+   FaLock,
   FaChartPie,
   FaChartLine,
 } from "react-icons/fa";
 import {
   MdCategory,
   MdShoppingCart,
-  MdAccountCircle,
-  MdOutlineInventory,
+   MdOutlineInventory,
 } from "react-icons/md";
 import { HiOutlineDocumentReport, HiUserGroup } from "react-icons/hi";
 import { IoMdPricetags } from "react-icons/io";
Index: src/components/Navbar/MyComponent.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header/header\";\r\nimport { useI18nContext } from \"../context/i18n-context\";\r\nimport { Bell, SketchLogo, Translate } from \"@phosphor-icons/react\";\r\nimport LogOut from \"../LogOut/LogOut\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { MdProductionQuantityLimits } from \"react-icons/md\";\r\nimport CartHover from \"../BestSeller/CartHover\";\r\nimport { FiMenu, FiX } from \"react-icons/fi\";\r\nimport Logo from \"./logo/Black-and-Gold-Sophisticated-Traditional-Fashion-Logo-(1).svg\";\r\nconst MyComponent = ({ openSideBar,  }) => {\r\n  const { t, language, changeLanguage } = useI18nContext();\r\n  const token = Cookies.get(\"token\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const handleOpenSideBar = () => {\r\n    openSideBar();\r\n  };\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(\r\n            \"https://store-system-api.gleeze.com/api/Users/getMe\",\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          setRole(response.data.data.role || \"shop\");\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data:\", error);\r\n          if (\r\n            error.response &&\r\n            error.response.data.message === \"jwt malformed\"\r\n          ) {\r\n            Cookies.remove(\"token\");\r\n          }\r\n          setRole(\"shop\");\r\n        }\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div\r\n      className=\"z-40 fixed w-100 box dark:bg-gray-900 px-6 pt-2\"\r\n      dir={language === \"ar\" ? \"rtl\" : \"ltr\"}\r\n      style={{ backgroundColor: \"var(--back)\" }}\r\n    >\r\n      <div className=\"d-flex justify-between\">\r\n        <div className=\"d-flex\">\r\n          {/* <button\r\n            id=\"menu-bar\"\r\n            type=\"button\"\r\n            className=\" bg-transparent rounded-full p-1 ms-0 text-gray-500 dark:hover:text-white focus:outline-none hover:text-slate-500\"\r\n            onClick={handleOpenSideBar}\r\n            title=\"menu\"\r\n          >\r\n            {isSideBarOpen ? (\r\n              <FiX className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            ) : (\r\n              <FiMenu className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            )}\r\n          </button> */}\r\n          <h3\r\n            className=\"text-gray-900 dark:text-gray-100 font flex justify-content-center gap-2 min-w-max\"\r\n            onClick={() => handleOpenSideBar}\r\n          >\r\n            {/* <SketchLogo /> {t(`Home.GleamGoods`)} */}\r\n            <img src={Logo} alt=\"Logo\" className=\"h-20 w-20 object-cover\" />\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"w-25 flex items-center justify-content-center\">\r\n            {role === \"customer\" && (\r\n              <div\r\n                className=\"relative\"\r\n                onMouseEnter={() => setIsHovered(true)}\r\n                onMouseLeave={() => setIsHovered(false)}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"relative bg-transparent rounded-full p-1 ms-3 text-gray-500 dark:hover:text-white focus:outline-none hover:text-slate-500 w-fit\"\r\n                  title={t(\"Home.Cart\")}\r\n                >\r\n                  <span className=\"absolute -inset-1.5\" />\r\n                  <MdProductionQuantityLimits\r\n                    className=\"h-6 w-10\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </button>\r\n                {isHovered && (\r\n                  <div className=\"absolute top-full left-0 mt-2 bg-white border w-64 border-gray-300 shadow-lg p-2 rounded\">\r\n                    <CartHover />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <LogOut />\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"relative bg-transparent rounded-full p-1 ms-3 text-gray-500 dark:hover:text-white focus:outline-none hover:text-slate-500 w-fit\"\r\n              onClick={() => {\r\n                changeLanguage(language === \"en\" ? \"ar\" : \"en\");\r\n              }}\r\n              title={t(\"Home.Translate\")}\r\n            >\r\n              <span className=\"absolute -inset-1.5\" />\r\n              <Translate className=\"h-6 w-10\" aria-hidden=\"true\" />\r\n            </button>\r\n            <Header />\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"relative bg-transparent rounded-full p-1 text-gray-500 dark:hover:text-white focus:outline-none hover:text-slate-500 w-fit\"\r\n              title={t(\"Home.Notifications\")}\r\n            >\r\n              <span className=\"absolute -inset-1.5\" />\r\n              <span className=\"sr-only\">View notifications</span>\r\n              <Bell className=\"h-6 w-10\" aria-hidden=\"true\" />\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navbar/MyComponent.jsx b/src/components/Navbar/MyComponent.jsx
--- a/src/components/Navbar/MyComponent.jsx	
+++ b/src/components/Navbar/MyComponent.jsx	
@@ -67,7 +67,7 @@
             onClick={() => handleOpenSideBar}
           >
             {/* <SketchLogo /> {t(`Home.GleamGoods`)} */}
-            <img src={Logo} alt="Logo" className="h-20 w-20 object-cover" />
+            <img src={Logo} alt="Logo" className="h-20 w-32 object-cover" title={t("Home.Translate")}/>
           </h3>
         </div>
         
